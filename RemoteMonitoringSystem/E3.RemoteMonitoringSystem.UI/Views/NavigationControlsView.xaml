<UserControl x:Class="E3.RemoteMonitoringSystem.UI.Views.NavigationControlsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:E3.RemoteMonitoringSystem.UI.Views"
             xmlns:equalityConverters="clr-namespace:E3.RemoteMonitoringSystem.UI.Converters"
             xmlns:converters="clr-namespace:E3.ReactorManager.Interfaces.UI.Converters;assembly=E3.ReactorManager.Interfaces"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="150" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <equalityConverters:CheckIfEqualValuesConverter x:Key="CheckIfEqualValuesCon"/>
        <converters:FontSizeConverter x:Key="FontSizeCon"/>
        <Style TargetType="Button" x:Key="CommonButtonStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#32ccdf"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Converter={StaticResource FontSizeCon}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="#272e3e">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Viewbox Grid.Column="0">
            <Label Content="e3 tech" HorizontalAlignment="Left" FontFamily="TeslaNikolaCaps" Foreground="White"/>
        </Viewbox>
        <ItemsControl Grid.Column="1" ItemsSource="{Binding RegisteredViews}" HorizontalAlignment="Center">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding}" Command="{Binding Path=DataContext.NavigateCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Converter={StaticResource FontSizeCon}}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Background" Value="#1a202c"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="5"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Red"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" Value="Gray"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Value="true">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{StaticResource CheckIfEqualValuesCon}">
                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" Path="DataContext.ActiveView"/>
                                                <Binding RelativeSource="{RelativeSource Self}" Path="Content"/>
                                            </MultiBinding>
                                        </DataTrigger.Binding>
                                        <DataTrigger.Setters>
                                            <Setter Property="BorderBrush" Value="#4CDCDC"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Background" Value="#2F515D" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Value="false">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{StaticResource CheckIfEqualValuesCon}">
                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" Path="DataContext.ActiveView"/>
                                                <Binding RelativeSource="{RelativeSource Self}" Path="Content"/>
                                            </MultiBinding>
                                        </DataTrigger.Binding>
                                        <DataTrigger.Setters>
                                            <Setter Property="BorderBrush" Value="#1e2432"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="Background" Value="#1e2432" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <Grid Grid.Column="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" x:Name="RunningTimeLabel" Content="{Binding RunningTime}" FontSize="{Binding ElementName=RunningTimeLabel, Path=ActualHeight, Converter={StaticResource FontSizeCon}}" Foreground="White"/>
            <Button Grid.Column="1" Content=" - " Style="{StaticResource CommonButtonStyle}" Command="{Binding MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
            <Button Grid.Column="2" Content="Key Board" Command="{Binding OpenKeyboardCommand}" Style="{StaticResource CommonButtonStyle}"/>
            <Button Grid.Column="3" Content="Close" Background="Red" Command="{Binding ShutDownAppCommand}" Style="{StaticResource CommonButtonStyle}"/>
        </Grid>
    </Grid>
</UserControl>
