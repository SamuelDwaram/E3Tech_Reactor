<Window x:Class="USV.ShellProject.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:USV.ShellProject.Views"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        mc:Ignorable="d"
        Title="MainWindowView" Height="450" Width="800"
        WindowStartupLocation="CenterOwner"
        WindowStyle="None"
        WindowState="Maximized">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Background="#1a202c">
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="20*"/>
        </Grid.RowDefinitions>
        <ContentControl prism:RegionManager.RegionName="DialogService"/>
        <Grid Grid.Row="0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Viewbox>
                    <Button IsEnabled="{Binding InitialisationIsDone}" Margin="5" BorderThickness="0" Cursor="Hand" HorizontalAlignment="Right" FontSize="16" Command="{Binding NavigateToOtherScreenCommand}" CommandParameter="Login">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <!--Invoke log out command for Recording LogOut event in audit trail-->
                                <i:InvokeCommandAction Command="{Binding LogOutCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Log Out" Foreground="#FF8E94A1" FontSize="16" VerticalAlignment="Center"/>
                                    <Path Fill="#FF8E94A1" Stretch="Fill" Width="15" Height="15" VerticalAlignment="Center"
                                          Data="M48.3,410.1H36c0,0-0.1,0-0.1,0.1v13.8c0,0,0,0.1,0.1,0.1h12.2c0,0,0.1,0,0.1-0.1v-2.4h-1.7v0.6
	                                        c0,0,0,0.1-0.1,0.1h-8.8c0,0-0.1,0-0.1-0.1v-10.1c0,0,0-0.1,0.1-0.1h8.8c0,0,0.1,0,0.1,0.1v0.6h1.7L48.3,410.1
	                                        C48.3,410.1,48.3,410.1,48.3,410.1zM45.5,413.4C45.5,413.4,45.5,413.4,45.5,413.4l-1.2,1.2c0,0,0,0,0,0l1.4,1.5h-4.7c-0.2,0-0.3,0.1-0.3,0.3v1.1
	                                        c0,0.2,0.1,0.3,0.3,0.3h4.7l-1.5,1.5c0,0,0,0,0,0l1.2,1.2c0,0,0,0,0,0v0c0,0,0,0,0,0l3.4-3.5c0,0,0,0,0,0l0,0c0,0,0,0,0-0.1
	                                        L45.5,413.4C45.5,413.4,45.5,413.4,45.5,413.4L45.5,413.4z">
                                    </Path>
                                </StackPanel>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Viewbox>
                <Viewbox>
                    <Button IsEnabled="{Binding InitialisationIsDone}" Content="Shut Down" Command="{Binding ClosedCommand}" Foreground="#ff8e94a1" Background="#1a202c" Margin="5" BorderThickness="0" Cursor="Hand" HorizontalAlignment="Right" FontSize="12" Style="{StaticResource ReactorButtonStyle}"/>
                </Viewbox>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <ContentControl prism:RegionManager.RegionName="SelectedViewPane"/>
        </Grid>
        <Popup Name="CommunicationStatusPopup"
               Placement="Center"
               Width="500" Height="150">
            <Popup.Style>
                <Style TargetType="{x:Type Popup}">
                    <Setter Property="IsOpen" Value="False"/>
                    <Style.Triggers>

                        <!--#region Open CommunicationStatus popup only after initialisation is done-->

                        <DataTrigger Binding="{Binding InitialisationIsDone}" Value="false">
                            <Setter Property="IsOpen" Value="False"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding InitialisationIsDone}" Value="true"/>
                                <Condition Binding="{Binding CommunicationStatus}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsOpen" Value="True"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding InitialisationIsDone}" Value="true"/>
                                <Condition Binding="{Binding CommunicationStatus}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard x:Name="CommunicationSuccessPopup" RepeatBehavior="0:0:2">
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Duration="0:0:2">
                                            <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0" />
                                            <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:2" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        <!--#endregion-->

                    </Style.Triggers>
                </Style>
            </Popup.Style>
            <Border BorderBrush="#1a202c"
                    BorderThickness="3"
                    Height="150" Width="500">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.5*"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0"
                      Background="#1a202c">
                        <Label Foreground="White"
                           FontSize="25">
                            <Label.Style>
                                <Style TargetType="{x:Type Label}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CommunicationStatus}" Value="false">
                                            <Setter Property="Content" Value="Coupler Communication Failure"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CommunicationStatus}" Value="true">
                                            <Setter Property="Content" Value="Coupler Communication Successful"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>
                    <Grid Grid.Row="1"
                      Background="#FF272E3E">
                        <StackPanel Margin="0,10,0,0">
                            <Path Width="50"
                              Height="40"
                              Stretch="Fill">
                                <Path.Style>
                                    <Style TargetType="{x:Type Path}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CommunicationStatus}" Value="false">
                                                <Setter Property="Fill" Value="#e60d15"/>
                                                <Setter Property="Data" 
                                                        Value="M-566.9,487.2l-15.3-26.5c-0.8-1.5-3-1.5-3.8,0l-15.3,26.5c-0.8,1.5,0.2,3.3,1.9,3.3h30.6  C-567,490.5-566,488.6-566.9,487.2z M-578.4,484.3c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7c-0.4,0.4-1,0.4-1.4,0l-4.3-4.3  l-4.3,4.3c-0.2,0.2-0.4,0.3-0.7,0.3c-0.3,0-0.5-0.1-0.7-0.3c-0.4-0.4-0.4-1,0-1.4l4.3-4.3l-4.3-4.3c-0.4-0.4-0.4-1,0-1.4  c0.2-0.2,0.4-0.3,0.7-0.3h0c0.3,0,0.5,0.1,0.7,0.3l4.3,4.3l4.3-4.3c0.2-0.2,0.4-0.3,0.7-0.3h0c0.3,0,0.5,0.1,0.7,0.3  c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-4.3,4.3L-578.4,484.3z"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CommunicationStatus}" Value="true">
                                                <Setter Property="Fill" Value="#f17e3d"/>
                                                <Setter Property="Data"
                                                        Value="M-566.9,487.2l-15.3-26.5c-0.8-1.5-3-1.5-3.8,0l-15.3,26.5c-0.8,1.5,0.2,3.3,1.9,3.3h30.6  C-567,490.5-566,488.6-566.9,487.2z M-584.5,468.8c0.9-0.2,1.8,0.2,2.3,1.1c0.2,0.3,0.2,0.7,0.2,1c-0.1,1-0.1,1.9-0.2,2.9  c-0.1,1.5-0.2,3-0.3,4.5c0,0.5,0,0.9-0.1,1.4c0,0.8-0.7,1.4-1.5,1.4c-0.8,0-1.4-0.6-1.5-1.4c-0.1-2.3-0.3-4.7-0.4-7  c0-0.6-0.1-1.3-0.1-1.9C-586,469.9-585.4,469-584.5,468.8z M-584,486.4c-1.1,0-1.9-0.9-1.9-2s0.9-2,2-2s1.9,0.9,1.9,2  C-582.1,485.5-583,486.4-584,486.4z"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                            <Label HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               Foreground="White"
                               FontSize="20">
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding CommunicationStatus}" Value="false">
                                                <Setter Property="Content" Value="Please check connection with coupler"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding CommunicationStatus}" Value="true">
                                                <Setter Property="Content" Value="Successfully connected to coupler"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
        </Popup>
        <Border Grid.Row="1"
                BorderBrush="#1a202c"
                BorderThickness="3"
                Height="150" Width="500">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding InitialisationIsDone}" Value="true">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding InitialisationIsDone}" Value="false">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1.5*"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0"
                      Background="#1a202c">
                    <Label Foreground="White"
                            Content="Initializing Data..."
                            FontSize="25">
                    </Label>
                </Grid>
                <Grid Grid.Row="1"
                          Background="#FF272E3E">
                    <StackPanel Margin="0,10,0,0">
                        <Path Width="50"
                                Height="40"
                                Fill="#f17e3d"
                                Data="M-566.9,487.2l-15.3-26.5c-0.8-1.5-3-1.5-3.8,0l-15.3,26.5c-0.8,1.5,0.2,3.3,1.9,3.3h30.6  C-567,490.5-566,488.6-566.9,487.2z M-584.5,468.8c0.9-0.2,1.8,0.2,2.3,1.1c0.2,0.3,0.2,0.7,0.2,1c-0.1,1-0.1,1.9-0.2,2.9  c-0.1,1.5-0.2,3-0.3,4.5c0,0.5,0,0.9-0.1,1.4c0,0.8-0.7,1.4-1.5,1.4c-0.8,0-1.4-0.6-1.5-1.4c-0.1-2.3-0.3-4.7-0.4-7  c0-0.6-0.1-1.3-0.1-1.9C-586,469.9-585.4,469-584.5,468.8z M-584,486.4c-1.1,0-1.9-0.9-1.9-2s0.9-2,2-2s1.9,0.9,1.9,2  C-582.1,485.5-583,486.4-584,486.4z"
                                Stretch="Fill">
                        </Path>
                        <Label HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Content="Loading All Reactors Data... Please Wait..."
                                Foreground="White"
                                FontSize="20">
                        </Label>
                    </StackPanel>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
