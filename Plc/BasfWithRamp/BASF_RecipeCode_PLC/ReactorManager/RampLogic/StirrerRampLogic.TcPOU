<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.3">
  <POU Name="StirrerRampLogic" Id="{456ef3f6-66e6-4cc3-8987-8cf3dd5c2828}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM StirrerRampLogic

VAR
	i: INT;
	rTime : STRING;
	rMin : DINT;
	rSec : INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
//// ramp for stirrer R1
IF R1.StirrerStartTimer=1 THEN
	

R1.StirrerTick:=R1.StirrerTick+1;

IF R1.StirrerTick=40  THEN
	R1.StirrerSecondTick:=R1.StirrerSecondTick+1;
	R1.StirrerTick:=0;
END_IF

IF R1.StirrerSecondTick=60  THEN
	R1.StirrerMinuteTick:=R1.StirrerMinuteTick+1;
	R1.StirrerSecondTick:=0;
END_IF

ELSE
	R1.StirrerTick:=0;
	R1.StirrerSecondTick:=0;
	R1.StirrerMinuteTick:=0;
END_IF
// START RAMP

IF R1.StirrerRampStatus THEN
	//initialize ramp parameters if first step
	IF R1.StirrerRampStep = -1 THEN
		R1.StirrerRampStep := R1.StirrerRampStep + 1;
		R1.StirrerRampStarted[R1.StirrerRampStep]:=TRUE;
		R1.StirrerRampStartedTime[R1.StirrerRampStep]:= Main.concatenatedHourMinuteString;
	END_IF
	
	R1.StirrerStatus := TRUE;
	// WRITE RAMP SP TO Stirrer SP	
	R1.StirrerSetPoint:=R1.StirrerRampSetpoint[R1.StirrerRampStep];
	// CHECK IF RPM REACHES SP
	IF ABS(R1.StirrerCurrentSpeed-R1.StirrerRampSetpoint[R1.StirrerRampStep])<5 THEN
		R1.StirrerSPCheck:=1;
		ELSE
		R1.StirrerSPCheck:=0;
	END_IF
	
	R1.StirrerSPCheck_R(CLK:=R1.StirrerSPCheck , Q=>R1.StirrerSPChecktrigger );
	// IF SP REACHED START TIMER
	IF R1.StirrerSPChecktrigger THEN
	R1.StirrerStartTimer:=1;
		
	END_IF
	// CHECK IF HOLD TIME ELAPSED. IF ELAPSED CHECK IF LAST STEP AND END ELSE INCREMENT STEP
	IF (R1.StirrerMinuteTick-R1.StirrerRampTime[R1.StirrerRampStep])=0 THEN
		  R1.StirrerRampEnded[R1.StirrerRampStep]:=1;
		  IF R1.StirrerRampEndedTime[R1.StirrerRampStep] = '' THEN
			 R1.StirrerRampEndedTime[R1.StirrerRampStep]:= Main.concatenatedHourMinuteString;
		  END_IF
		  R1.StirrerRampStep:=R1.StirrerRampStep+1;
		  IF R1.StirrerRampStep=R1.StirrerRampNumberOfSteps THEN
			  R1.StirrerRampStatus:=0;
			  R1.StirrerStartTimer:=0;  
			  ELSE
				R1.StirrerRampStarted[R1.StirrerRampStep]:=1;
				IF R1.StirrerRampStartedTime[R1.StirrerRampStep] = '' THEN
					R1.StirrerRampStartedTime[R1.StirrerRampStep]:= Main.concatenatedHourMinuteString;
				END_IF
				R1.StirrerMinuteTick:=0;
				R1.StirrerStartTimer:=0;  
		  END_IF
	END_IF
	
	//update the remaining time in current step
	rMin := R1.StirrerRampTime[R1.StirrerRampStep] - R1.StirrerMinuteTick - 1;
	IF rMin < 0 THEN
		rMin := 0;
	END_IF
	rSec := 60 - R1.StirrerSecondTick;
	IF rSec = 0 THEN
		rMin := rMin + 1;
	END_IF
	R1.StirrerRampRemainingTime := concat(DINT_TO_STRING(rMin), ':');
	R1.StirrerRampRemainingTime := concat(R1.StirrerRampRemainingTime, DINT_TO_STRING(rSec));
	
	// SKIP OPERATION . IF SKIP PRESSED THEN INCREMENT STEP AFTER CHECKING BOUNDARY CONDN
	R1.StirrerRampSkip(CLK:=R1.StirrerRampStepSkipStatus , Q=>R1.StirrerRampSkipTrigger );
	IF R1.StirrerRampSkipTrigger AND R1.StirrerRampStep<=(R1.StirrerRampNumberOfSteps - 1) THEN
		R1.StirrerRampStepSkipStatus := FALSE; //reset the bit set true by SCADA
		R1.StirrerRampEnded[R1.StirrerRampStep]:=1;
		R1.StirrerRampEndedTime[R1.StirrerRampStep]:= Main.concatenatedHourMinuteString;
		IF R1.StirrerRampStep < R1.StirrerRampNumberOfSteps THEN
			R1.StirrerRampStep:=R1.StirrerRampStep+1;
			R1.StirrerStartTimer:=0;
			R1.StirrerRampStarted[R1.StirrerRampStep]:=1;
			R1.StirrerRampStartedTime[R1.StirrerRampStep]:=Main.concatenatedHourMinuteString;
		ELSE
			// we are in the last step of Ramp. So turn the RampStatus off.
			R1.StirrerRampStatus := FALSE;
		END_IF
	END_IF
	
	// EDIT OPERATION
	R1.StirrerRampEdit(CLK:=R1.StirrerRampStepEditStatus , Q=>R1.StirrerRampEditTrigger );
	IF R1.StirrerRampEditTrigger THEN
		//reset the timer so the step will start again
		R1.StirrerStartTimer:=0;  
	END_IF
	
	R1.StirrerRampClear(clk:= R1.StirrerRampClearStatus, q=>R1.StirrerRampClearStatus);
	IF R1.StirrerRampClearTrigger THEN
		R1.StirrerRampClearStatus := FALSE; //reset the bit set true by SCADA
		R1.StirrerRampStep:=-1;
		R1.StirrerRampStartedTime[i]:='';
		R1.StirrerRampEndedTime[i]:='';
	END_IF
ELSE
	R1.StirrerRampStep:=-1;
	R1.StirrerRampRemainingTime := '';
	FOR i:= 0 TO 7 DO
		R1.StirrerRampStarted[i]:=FALSE;
		R1.StirrerRampEnded[i]:=FALSE;
	END_FOR
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="StirrerRampLogic">
      <LineId Id="25" Count="23" />
      <LineId Id="151" Count="0" />
      <LineId Id="171" Count="2" />
      <LineId Id="198" Count="1" />
      <LineId Id="174" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="152" Count="0" />
      <LineId Id="50" Count="32" />
      <LineId Id="85" Count="0" />
      <LineId Id="203" Count="1" />
      <LineId Id="210" Count="0" />
      <LineId Id="218" Count="2" />
      <LineId Id="211" Count="3" />
      <LineId Id="205" Count="0" />
      <LineId Id="223" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="93" Count="2" />
      <LineId Id="192" Count="0" />
      <LineId Id="96" Count="1" />
      <LineId Id="101" Count="0" />
      <LineId Id="177" Count="2" />
      <LineId Id="175" Count="0" />
      <LineId Id="180" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="103" Count="2" />
      <LineId Id="184" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="185" Count="3" />
      <LineId Id="195" Count="0" />
      <LineId Id="193" Count="1" />
      <LineId Id="189" Count="0" />
      <LineId Id="113" Count="1" />
      <LineId Id="221" Count="0" />
      <LineId Id="155" Count="1" />
      <LineId Id="164" Count="0" />
      <LineId Id="157" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>