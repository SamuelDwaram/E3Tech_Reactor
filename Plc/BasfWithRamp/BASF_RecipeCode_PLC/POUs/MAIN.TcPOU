<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="MAIN" Id="{4b5da83a-26fa-4291-a831-64e4215df518}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR	 
	couplerConnectionStatus			: BOOL := TRUE;
	NullRecipeStepArray 			: ARRAY[0..100] OF EachRecipeStep;
	
	fglocal							: FB_LocalSystemTime;
	System_Time						: TIMESTRUCT;
	currentHour						: STRING;
	currentMinute					: STRING;
	concatenatedHourMinuteString	: STRING;
	scaledValueCalculator			: ScaledValueCalculator;
	ClearRecipeTrig_R1				: R_Trig;	
	
	fbAnalogScaling					: FB_AnalogScaling;
	ipAnalogScaling					: I_AnalogScaling	:= fbAnalogScaling;
	
	fbMotorControl					: FB_MotorControl;
	ipMotorControl					: I_MotorControl := fbMotorControl ;
	
	fbReactor						: FB_Reactor(ipAnalogScaling := ipAnalogScaling,ipMotorControl:= ipMotorControl);
END_VAR

VAR_INPUT
	ReactorEmergencyStatus AT %I* 	: ARRAY[1..6] OF BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

// CALL THE REACTOR INSTANCE
fbReactor();



//Update Coupler Connection Status
IF	Coupler.CouplerConnectionState = 8 THEN
	Coupler.couplerConnectionStatus := TRUE;
ELSE
	Coupler.couplerConnectionStatus := FALSE; 
END_IF

//Code For Reading Current System Date and Time
fglocal(
	sNetID:='',
	bEnable:=TRUE,
	dwCycle:=5,
	dwOpt:=1,
	tTimeOut:=DEFAULT_ADS_TIMEOUT,
	bValid=> ,
	systemTime=>System_Time ,
	tzID=> );
	
//update current hour and minute strings	
currentHour := WORD_TO_STRING(fglocal.systemTime.wHour);
currentMinute := WORD_TO_STRING(fglocal.systemTime.wMinute);
concatenatedHourMinuteString := CONCAT(STR1:=currentHour, STR2:= ':');
concatenatedHourMinuteString := CONCAT(STR1:=concatenatedHourMinuteString, STR2:= currentMinute);

(* Update Used Now Status of Reactors and Other Equipment *)
IF R1.HeatCoolStatusFeedback OR R1.StirrerStatusFeedback THEN
	R1.UsedNow := TRUE;
ELSE	
	R1.UsedNow := FALSE;
END_IF

///CALL RECIPE MODULE-R1
IF R1.RecipeStatus THEN
	RecipeModule_R1();
END_IF
  
////End condition to wipe of the data in structure
	ClearRecipeTrig_R1(clk:=R1.ClearRecipe,q=>);
 IF ClearRecipeTrig_R1.Q  THEN
	R1.RecipeStatus:=FALSE;
	R1.RecipeStep := NullRecipeStepArray;
	R1.ClearRecipe:=FALSE;
	R1.RecipeEnded:=FALSE;
	R1.R1STEPS:=0;
	RecipeModule_R1.DosingTotalizerVolume:=0;
END_IF
   
//Stirre ramp
StirrerRampLogic();
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="5013" Count="0" />
      <LineId Id="5268" Count="0" />
      <LineId Id="5224" Count="0" />
      <LineId Id="5178" Count="0" />
      <LineId Id="5225" Count="0" />
      <LineId Id="5031" Count="31" />
      <LineId Id="5118" Count="16" />
      <LineId Id="5294" Count="0" />
      <LineId Id="5296" Count="0" />
      <LineId Id="2370" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>