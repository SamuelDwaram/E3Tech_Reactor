<UserControl x:Class="E3.RampManager.UserControls.RampStep"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:E3.RampManager.UserControls"
             xmlns:converters="clr-namespace:E3.ReactorManager.Interfaces.UI.Converters;assembly=E3.ReactorManager.Interfaces"
             xmlns:helpers="clr-namespace:E3.RampManager.Helpers"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:FontSizeConverter x:Key="fontSizeCon"/>
        <Style x:Key="CommandButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="#32d5d4"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Gray"/>
                                <Setter Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="grid" Background="#272e3e">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1.5*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="0.5*"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource fontSizeCon}}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource fontSizeCon}}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Background" Value="#1d2532" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="InputScope" Value="Number" />
            </Style>
        </Grid.Resources>
        <Label helpers:UiHelpers.StepIndex="{Binding StepIndex}" Grid.Column="0" />
        <TextBox x:Name="setPointText" Text="{Binding SetPoint, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" />
        <TextBox x:Name="minsToMaintainText" Text="{Binding MinsToMaintain, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" />
        <Label Content="{Binding StartTime}" Grid.Column="3" />
        <Label Content="{Binding EndTime}" Grid.Column="4" />
        <Label x:Name="remainingTimeText" Grid.Column="5" />
        <Button x:Name="skipButton" Content="Skip" Command="{Binding Path=DataContext.SkipRampStepCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding StepIndex}" Grid.Column="6" Style="{StaticResource CommandButtonStyle}"/>
        <Button x:Name="removeButton" Content="Remove" Command="{Binding Path=DataContext.RemoveRampStepCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding StepIndex}" Grid.Column="6" Style="{StaticResource CommandButtonStyle}"/>
    </Grid>
</UserControl>
